{"version":3,"sources":["node_modules/web-build-tasks/node_modules/browserify/node_modules/browser-pack/_prelude.js","app/src/connect-four.coffee","minimax-worker.min.js","app/src/minimax-worker.coffee","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","ConnectFour","MAX","MIN","O","X","_","copy","empty","evaluate","freePositions","isFull","isTerminal","isWin","openColumns","openPosition","play","ref","ref1","scores","winOn","winnableIndices","winner","wonIndices","j","k","m","p","q","res","push","sort","x","y","Math","min","apply","i1","i2","i3","i4","len","ref2","ref3","ref4","W","arg","indices","results","columnIndex","index","rowIndex","b","Array","len1","score","a1","nextPlayer","depth","this","prototype","nextAgent","utility","possibleActions","constructor","opponent","2","Game","MinimaxAgent","computerPlayer","game","player","random","shuffle","floor","self","onmessage","action","lastAction","data","command","args","postMessage","agent","nextAction","./connect-four","aye-aye","3","Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","successor","v","max"],"mappings":"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","file":"minimax-worker.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","# coffeelint: disable=max_line_length\n[MAX, MIN] = ['MAX', 'MIN'] # avoid requiring aye-aye just for these constants\n\n[_, X, O] = [0, 1, 2]\n\n# empty board\nempty = [\n  _, _, _, _, _, _, _\n  _, _, _, _, _, _, _\n  _, _, _, _, _, _, _\n  _, _, _, _, _, _, _\n  _, _, _, _, _, _, _\n  _, _, _, _, _, _, _\n]\n\n# array with all 4-tuple indices of board positions\n# where a player can win the game\nwinnableIndices = do ->\n  res = []\n  for i in [0...4]\n    # rows\n    for j in [0...6]\n      k=i+j*7\n      res.push [k,k+1,k+2,k+3]\n    # left diagonals\n    for j in [0...3]\n      k=i+j*7\n      res.push [k,k+7+1,k+7*2+2,k+7*3+3]\n  for j in [0...3]\n    # columns\n    for i in [0...7]\n      k=i+j*7\n      res.push [k,k+7,k+7*2,k+7*3]\n    # right diagonals\n    for i in [3...7]\n      k=i+j*7\n      res.push [k,k+7-1,k+7*2-2,k+7*3-3]\n  # sort based on bottom-up board position\n  res.sort (x, y) -> (Math.min y...) - (Math.min x...)\n\nwinner = (a) ->\n  for [i1,i2,i3,i4] in winnableIndices\n    return a[i1] if a[i1] isnt _ and a[i1] is a[i2] is a[i3] is a[i4]\n  null\n\nisWin = (a, W) -> (winner a) is W\n\nwonIndices = (a, [i1,i2,i3,i4]) ->\n  a[i1] isnt _ and a[i1] is a[i2] is a[i3] is a[i4]\n\nwinOn = (a) ->\n  for indices in winnableIndices\n    return indices if wonIndices a, indices\n  []\n\nisFull = (a) ->\n  for i in [0...7]\n    return no if a[i] is _\n  yes\n\nisTerminal = (a) ->\n  (isFull a) or !!(winner a)\n\nopenColumns = (a) ->\n  i for i in [0...7] when a[i] is _\n\nfreePositions = (a) ->\n  i for i in [0...42] when a[i] is _\n\nopenPosition = (a, columnIndex) ->\n  for rowIndex in [5..0]\n    index = rowIndex*7+columnIndex\n    return index if a[index] is _\n\n# this is a bit faster than using Array::slice\ncopy = (a) ->\n  i = 42\n  b = new Array i\n  b[i] = a[i] while i--\n  b\n\nplay = (a, columnIndex, W) ->\n  index = openPosition a, columnIndex\n  b = copy a\n  b[index] = W\n  b\n\nscores = [1,10,100,1000,10000]\nevaluate = (a) ->\n  score = 0\n  for indices in winnableIndices\n    [x, o] = [0, 0]\n    for i in indices\n      ++x if a[i] is X\n      ++o if a[i] is O\n    score += scores[x] - scores[o] if x is 0 or o is 0\n  score\n\nclass ConnectFour\n  constructor: (@a = empty, @nextPlayer = X, @depth = 0) ->\n  isWin: (W) -> isWin @a, W\n  winOn: -> winOn @a\n  winner: -> winner @a\n  isTerminal: -> @depth >= 7 and isTerminal @a\n  nextAgent: -> if @nextPlayer is X then MAX else MIN\n  utility: -> evaluate @a\n  freePositions: -> freePositions @a\n  openPosition: (columnIndex) -> openPosition @a, columnIndex\n  possibleActions: -> openColumns @a\n  play: (columnIndex) ->\n    new @constructor (play @a, columnIndex, @nextPlayer), @opponent(), @depth + 1\n  opponent: -> if @nextPlayer is X then O else X\n\nmodule.exports = {\n  _, X, O\n  empty\n  winner, isWin, winOn, isFull, isTerminal\n  freePositions, openColumns, openPosition, play, evaluate\n  ConnectFour\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar ConnectFour, MAX, MIN, O, X, _, copy, empty, evaluate, freePositions, isFull, isTerminal, isWin, openColumns, openPosition, play, ref, ref1, scores, winOn, winnableIndices, winner, wonIndices;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nref1 = [0, 1, 2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nempty = [_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _];\n\nwinnableIndices = (function() {\n  var i, j, k, l, m, n, p, q, r, res;\n  res = [];\n  for (i = l = 0; l < 4; i = ++l) {\n    for (j = m = 0; m < 6; j = ++m) {\n      k = i + j * 7;\n      res.push([k, k + 1, k + 2, k + 3]);\n    }\n    for (j = n = 0; n < 3; j = ++n) {\n      k = i + j * 7;\n      res.push([k, k + 7 + 1, k + 7 * 2 + 2, k + 7 * 3 + 3]);\n    }\n  }\n  for (j = p = 0; p < 3; j = ++p) {\n    for (i = q = 0; q < 7; i = ++q) {\n      k = i + j * 7;\n      res.push([k, k + 7, k + 7 * 2, k + 7 * 3]);\n    }\n    for (i = r = 3; r < 7; i = ++r) {\n      k = i + j * 7;\n      res.push([k, k + 7 - 1, k + 7 * 2 - 2, k + 7 * 3 - 3]);\n    }\n  }\n  return res.sort(function(x, y) {\n    return (Math.min.apply(Math, y)) - (Math.min.apply(Math, x));\n  });\n})();\n\nwinner = function(a) {\n  var i1, i2, i3, i4, l, len, ref2, ref3, ref4;\n  for (l = 0, len = winnableIndices.length; l < len; l++) {\n    ref2 = winnableIndices[l], i1 = ref2[0], i2 = ref2[1], i3 = ref2[2], i4 = ref2[3];\n    if (a[i1] !== _ && ((a[i1] === (ref4 = a[i2]) && ref4 === (ref3 = a[i3])) && ref3 === a[i4])) {\n      return a[i1];\n    }\n  }\n  return null;\n};\n\nisWin = function(a, W) {\n  return (winner(a)) === W;\n};\n\nwonIndices = function(a, arg) {\n  var i1, i2, i3, i4, ref2, ref3;\n  i1 = arg[0], i2 = arg[1], i3 = arg[2], i4 = arg[3];\n  return a[i1] !== _ && ((a[i1] === (ref3 = a[i2]) && ref3 === (ref2 = a[i3])) && ref2 === a[i4]);\n};\n\nwinOn = function(a) {\n  var indices, l, len;\n  for (l = 0, len = winnableIndices.length; l < len; l++) {\n    indices = winnableIndices[l];\n    if (wonIndices(a, indices)) {\n      return indices;\n    }\n  }\n  return [];\n};\n\nisFull = function(a) {\n  var i, l;\n  for (i = l = 0; l < 7; i = ++l) {\n    if (a[i] === _) {\n      return false;\n    }\n  }\n  return true;\n};\n\nisTerminal = function(a) {\n  return (isFull(a)) || !!(winner(a));\n};\n\nopenColumns = function(a) {\n  var i, l, results;\n  results = [];\n  for (i = l = 0; l < 7; i = ++l) {\n    if (a[i] === _) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nfreePositions = function(a) {\n  var i, l, results;\n  results = [];\n  for (i = l = 0; l < 42; i = ++l) {\n    if (a[i] === _) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nopenPosition = function(a, columnIndex) {\n  var index, l, rowIndex;\n  for (rowIndex = l = 5; l >= 0; rowIndex = --l) {\n    index = rowIndex * 7 + columnIndex;\n    if (a[index] === _) {\n      return index;\n    }\n  }\n};\n\ncopy = function(a) {\n  var b, i;\n  i = 42;\n  b = new Array(i);\n  while (i--) {\n    b[i] = a[i];\n  }\n  return b;\n};\n\nplay = function(a, columnIndex, W) {\n  var b, index;\n  index = openPosition(a, columnIndex);\n  b = copy(a);\n  b[index] = W;\n  return b;\n};\n\nscores = [1, 10, 100, 1000, 10000];\n\nevaluate = function(a) {\n  var i, indices, l, len, len1, m, o, ref2, score, x;\n  score = 0;\n  for (l = 0, len = winnableIndices.length; l < len; l++) {\n    indices = winnableIndices[l];\n    ref2 = [0, 0], x = ref2[0], o = ref2[1];\n    for (m = 0, len1 = indices.length; m < len1; m++) {\n      i = indices[m];\n      if (a[i] === X) {\n        ++x;\n      }\n      if (a[i] === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += scores[x] - scores[o];\n    }\n  }\n  return score;\n};\n\nConnectFour = (function() {\n  function ConnectFour(a1, nextPlayer, depth) {\n    this.a = a1 != null ? a1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  ConnectFour.prototype.isWin = function(W) {\n    return isWin(this.a, W);\n  };\n\n  ConnectFour.prototype.winOn = function() {\n    return winOn(this.a);\n  };\n\n  ConnectFour.prototype.winner = function() {\n    return winner(this.a);\n  };\n\n  ConnectFour.prototype.isTerminal = function() {\n    return this.depth >= 7 && isTerminal(this.a);\n  };\n\n  ConnectFour.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  ConnectFour.prototype.utility = function() {\n    return evaluate(this.a);\n  };\n\n  ConnectFour.prototype.freePositions = function() {\n    return freePositions(this.a);\n  };\n\n  ConnectFour.prototype.openPosition = function(columnIndex) {\n    return openPosition(this.a, columnIndex);\n  };\n\n  ConnectFour.prototype.possibleActions = function() {\n    return openColumns(this.a);\n  };\n\n  ConnectFour.prototype.play = function(columnIndex) {\n    return new this.constructor(play(this.a, columnIndex, this.nextPlayer), this.opponent(), this.depth + 1);\n  };\n\n  ConnectFour.prototype.opponent = function() {\n    if (this.nextPlayer === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  return ConnectFour;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  empty: empty,\n  winner: winner,\n  isWin: isWin,\n  winOn: winOn,\n  isFull: isFull,\n  isTerminal: isTerminal,\n  freePositions: freePositions,\n  openColumns: openColumns,\n  openPosition: openPosition,\n  play: play,\n  evaluate: evaluate,\n  ConnectFour: ConnectFour\n};\n\n\n},{}],2:[function(require,module,exports){\nvar ConnectFour, Game, MinimaxAgent, computerPlayer, game, openColumns, player, random, ref, shuffle;\n\nMinimaxAgent = require('aye-aye').MinimaxAgent;\n\nref = require('./connect-four'), ConnectFour = ref.ConnectFour, openColumns = ref.openColumns;\n\nGame = ConnectFour;\n\nrandom = function(i, n) {\n  return Math.floor(Math.random() * (n - i) + i);\n};\n\nshuffle = function(a) {\n  var i, j, k, n, ref1, ref2;\n  n = a.length;\n  if (n === 0) {\n    return a;\n  }\n  for (i = k = 0, ref1 = n - 1; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n    j = random(i, n);\n    ref2 = [a[j], a[i]], a[i] = ref2[0], a[j] = ref2[1];\n  }\n  return a;\n};\n\nConnectFour.prototype.possibleActions = function() {\n  return shuffle(openColumns(this.a));\n};\n\nplayer = null;\n\ngame = null;\n\nself.onmessage = function(e) {\n  var action, depth, lastAction;\n  switch (e.data.command) {\n    case 'setup':\n      game = new Game;\n      depth = e.data.args.depth;\n      return player = computerPlayer(depth);\n    case 'play':\n      lastAction = e.data.args.lastAction;\n      if (lastAction != null) {\n        game = game.play(lastAction);\n      }\n      action = player.play(game);\n      game = game.play(action);\n      return self.postMessage({\n        action: action\n      });\n  }\n};\n\ncomputerPlayer = function(depth) {\n  var agent;\n  if (depth == null) {\n    depth = 3;\n  }\n  agent = new MinimaxAgent(depth);\n  return {\n    play: function(game) {\n      if (game.isTerminal()) {\n        return;\n      }\n      return agent.nextAction(game);\n    }\n  };\n};\n\n\n},{\"./connect-four\":1,\"aye-aye\":3}],3:[function(require,module,exports){\nvar MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n\n},{}]},{},[2])\n\n","{MinimaxAgent} = require 'aye-aye'\n{ConnectFour, openColumns} = require './connect-four'\nGame = ConnectFour\n\n# returns random j such that i ≤ j < n\nrandom = (i, n) -> Math.floor(Math.random()*(n-i)+i)\n\n# Fisher–Yates\nshuffle = (a) ->\n  n = a.length\n  return a if n is 0\n  for i in [0...n-1]\n    j = random i, n\n    [a[i],a[j]] = [a[j],a[i]]\n  a\n\nConnectFour::possibleActions = -> shuffle openColumns @a\n\nplayer = null\ngame = null\n\nself.onmessage = (e) ->\n  switch e.data.command\n    when 'setup'\n      game = new Game\n      depth = e.data.args.depth\n      player = computerPlayer depth\n    when 'play'\n      lastAction = e.data.args.lastAction\n      game = game.play lastAction if lastAction?\n      action = player.play game\n      game = game.play action\n      self.postMessage {action}\n\ncomputerPlayer = (depth = 3) ->\n  agent = new MinimaxAgent depth\n  play: (game) ->\n    return if game.isTerminal()\n    agent.nextAction game\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}